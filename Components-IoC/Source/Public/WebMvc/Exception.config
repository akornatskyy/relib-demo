<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" requirePermission="false" />
    </configSections>
    <unity>
        <namespace name="ReusableLibrary.Abstractions.Models" />
        <namespace name="ReusableLibrary.Abstractions.Tracing" />
        <namespace name="ReusableLibrary.Abstractions.Services" />
        <namespace name="ReusableLibrary.Web.Integration" />
        <assembly name="ReusableLibrary.Abstractions" />
        <assembly name="ReusableLibrary.Web" />
        <!-- Lifetime Managers -->
        <alias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
        <alias alias="HttpAntiForgeryException" type="System.Web.Mvc.HttpAntiForgeryException, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <alias alias="HttpRequestValidationException" type="System.Web.HttpRequestValidationException, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <container>
            <!-- 
        
            Exception Trace Policy 
                
            -->
            <register type="IExceptionHandler" mapTo="ExceptionPolicyHandler">
                <lifetime type="Singleton" />
                <property name="Chain">
                    <array>
                        <dependency name="IgnoreLocal" />
                        <dependency name="IgnoreDebug" />
                        <dependency name="Http" />
                        <dependency name="RedirectLimitExceededException" />
                        <dependency name="ErrorThrottle" />
                        <dependency name="RedirectIpPolicyException" />
                        <dependency name="RedirectHttpAntiForgeryException" />
                        <dependency name="RedirectHttpRequestValidationException" />
                        <dependency name="IgnoreHttpAntiForgeryException" />
                        <dependency name="IgnoreHttpRequestValidationException" />
                        <dependency name="HttpContext" />
                        <dependency name="Process" />
                        <dependency name="PerformanceCounters" />
                        <dependency name="Machine" />
                        <dependency name="Assemblies" />
                        <dependency name="EventLog" />
                        <dependency name="Mail" />
                        <dependency name="Null" />
                    </array>
                </property>
            </register>
            <register name="IgnoreDebug" type="IExceptionHandler" mapTo="IgnoreDebugExceptionHandler">
                <lifetime type="Singleton" />
                <property name="IgnoreDebug">
                    <value value="false" />
                </property>
            </register>
            <register name="IgnoreLocal" type="IExceptionHandler" mapTo="IgnoreLocalExceptionHandler">
                <lifetime type="Singleton" />
                <property name="IgnoreLocal">
                    <value value="false" />
                </property>
            </register>
            <register name="Http" type="IExceptionHandler" mapTo="HttpExceptionHandler">
                <lifetime type="Singleton" />
                <property name="Ignore">
                    <array>
                        <!-- NotFound -->
                        <value value="404" />
                    </array>
                </property>
            </register>
            <register name="IgnoreHttpAntiForgeryException" type="IExceptionHandler" mapTo="IgnoreExceptionHandler`1[HttpAntiForgeryException]">
                <lifetime type="Singleton" />
            </register>
            <register name="RedirectLimitExceededException" type="IExceptionHandler" mapTo="RedirectExceptionHandler`1[LimitExceededException]">
                <lifetime type="Singleton" />
                <property name="RedirectUrl">
                    <value value="/en/error/limitexceeded" />
                </property>
            </register>
            <register name="RedirectIpPolicyException" type="IExceptionHandler" mapTo="RedirectExceptionHandler`1[IpPolicyException]">
                <lifetime type="Singleton" />
                <property name="RedirectUrl">
                    <value value="/en/error/ippolicy" />
                </property>
            </register>
            <register name="RedirectHttpAntiForgeryException" type="IExceptionHandler" mapTo="RedirectExceptionHandler`1[HttpAntiForgeryException]">
                <lifetime type="Singleton" />
                <property name="CheckInner">
                    <value value="true" />
                </property>
                <property name="RedirectUrl">
                    <value value="/en/error/httpantiforgery" />
                </property>
            </register>
            <register name="IgnoreHttpRequestValidationException" type="IExceptionHandler" mapTo="IgnoreExceptionHandler`1[HttpRequestValidationException]">
                <lifetime type="Singleton" />
            </register>
            <register name="RedirectHttpRequestValidationException" type="IExceptionHandler" mapTo="RedirectExceptionHandler`1[HttpRequestValidationException]">
                <lifetime type="Singleton" />
                <property name="CheckInner">
                    <value value="true" />
                </property>
                <property name="RedirectUrl">
                    <value value="/en/error/httprequestvalidation" />
                </property>
            </register>
            <register name="ErrorThrottle" type="IExceptionHandler" mapTo="ErrorThrottleExceptionHandler">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="mailService" type="IMailService">
                        <dependency name="ExceptionMailer" />
                    </param>
                </constructor>
                <property name="Application">
                    <value value="ReusableLibrary Demo" />
                </property>
                <!--
                    If there are more than {ErrorRate} errors
                    during {ThrottlePeriod} than block all incoming
                    requests with HttpForbidden for {BlockPeriod}.                
                -->
                <property name="ErrorRate">
                    <value value="10" />
                </property>
                <property name="ThrottlePeriod">
                    <!-- hh:mm:ss -->
                    <value value="00:30:00" />
                </property>
                <property name="BlockPeriod">
                    <!-- hh:mm:ss -->
                    <value value="02:15:00" />
                </property>
            </register>
            <register name="HttpContext" type="IExceptionHandler" mapTo="HttpContextExceptionHandler">
                <lifetime type="Singleton" />
                <property name="ServerVariables">
                    <array>
                        <value value="URL" />
                        <value value="HTTP_X_FORWARDED_FOR" />
                        <value value="REMOTE_ADDR" />
                        <value value="REQUEST_METHOD" />
                        <value value="HTTP_REFERER" />
                        <value value="HTTP_ACCEPT_LANGUAGE" />
                        <value value="HTTP_USER_AGENT" />
                    </array>
                </property>
                <property name="Exclude">
                    <array>
                        <value value="password" />
                    </array>
                </property>
            </register>
            <register name="Process" type="IExceptionHandler" mapTo="ProcessExceptionHandler">
                <lifetime type="Singleton" />
            </register>
            <register name="Machine" type="IExceptionHandler" mapTo="MachineExceptionHandler">
                <lifetime type="Singleton" />
            </register>
            <register name="Assemblies" type="IExceptionHandler" mapTo="AssembliesExceptionHandler">
                <lifetime type="Singleton" />
                <property name="Ignore">
                    <array>
                        <value value="mscorlib" />
                        <value value="System" />
                        <value value="Microsoft" />
                        <value value="VJSharpCodeProvider" />
                        <value value="SMDiagnostics" />
                        <value value="Anonymously Hosted DynamicMethods Assembly" />
                        <value value="App_" />
                        <value value="WebDev.WebHost" />
                        <value value="ReusableLibrary" />
                    </array>
                </property>
            </register>
            <register name="PerformanceCounters" type="IExceptionHandler" mapTo="PerformanceCounterExceptionHandler">
                <lifetime type="Singleton" />
                <property name="Counters">
                    <array>
                        <value value="\Memory\Pages/sec" />
                        <value value="\PhysicalDisk(_Total)\Avg. Disk Queue Length" />
                        <value value="\Processor(_Total)\% Processor Time" />
                        <value value="\.NET CLR Exceptions(_Global_)\# of Exceps Thrown / sec" />
                        <value value="\ASP.NET\Requests Disconnected" />
                        <value value="\ASP.NET\Requests Queued" />
                        <value value="\ASP.NET\Requests Rejected" />
                        <value value="\ASP.NET\Requests Current" />
                        <value value="\ASP.NET\Request Execution Time" />
                        <value value="\ASP.NET\Request Wait Time" />
                        <value value="\ASP.NET Applications(__Total__)\Errors During Execution" />
                        <value value="\ASP.NET Applications(__Total__)\Errors Unhandled During Execution" />
                        <value value="\ASP.NET Applications(__Total__)\Errors Unhandled During Execution/Sec" />
                        <value value="\ASP.NET Applications(__Total__)\Errors Total" />
                        <value value="\ASP.NET Applications(__Total__)\Errors Total/Sec" />
                        <value value="\ASP.NET Applications(__Total__)\Output Cache Entries" />
                        <value value="\ASP.NET Applications(__Total__)\Output Cache Hits" />
                        <value value="\ASP.NET Applications(__Total__)\Output Cache Misses" />
                        <value value="\ASP.NET Applications(__Total__)\Output Cache Hit Ratio" />
                        <value value="\ASP.NET Applications(__Total__)\Output Cache Turnover Rate" />
                        <value value="\ASP.NET Applications(__Total__)\Request Bytes In Total" />
                        <value value="\ASP.NET Applications(__Total__)\Request Bytes Out Total" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Executing" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Failed" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Not Found" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Not Authorized" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Succeeded" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Timed Out" />
                        <value value="\ASP.NET Applications(__Total__)\Requests Total" />
                        <value value="\ASP.NET Applications(__Total__)\Requests/Sec" />
                        <!-- Memcached Counters -->
                        <value value="\Reusable Library Demo Memcached(__total__)\Total Cache Failed Requests" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Cache Failed Requests/sec" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Total Cache Hits" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Cache Hits/sec" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Total Cache Misses" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Cache Misses/sec" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Total Cache Store Requests" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Cache Store Requests/sec" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Total Cache Remove Requests" />
                        <value value="\Reusable Library Demo Memcached(__total__)\Cache Remove Requests/sec" />
                        <!-- Captcha Counters -->
                        <value value="\Reusable Library Demo Captcha(__total__)\Total Captcha Requests" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Captcha Requests/sec" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Total Captcha Failed Requests" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Captcha Failed Requests/sec" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Total Captcha Render Requests" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Captcha Render Requests/sec" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Total Captcha Verification Requests" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Captcha Verification Requests/sec" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Total Captcha Verification Failed Requests" />
                        <value value="\Reusable Library Demo Captcha(__total__)\Captcha Verification Failed/sec" />
                    </array>
                </property>
            </register>
            <register name="EventLog" type="IExceptionHandler" mapTo="EventLogExceptionHandler">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="sourceName" type="string">
                        <value value=".NET Runtime" />
                    </param>
                    <param name="logName" type="string">
                        <value value="Application" />
                    </param>
                    <param name="eventId" type="int">
                        <value value="5000" />
                    </param>
                </constructor>
            </register>
            <register name="Mail" type="IExceptionHandler" mapTo="MailExceptionHandler">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="mailService" type="IMailService">
                        <dependency name="ExceptionMailer" />
                    </param>
                </constructor>
                <property name="Application">
                    <value value="ReusableLibrary Demo" />
                </property>
            </register>
            <register name="Null" type="IExceptionHandler" mapTo="NullExceptionHandler">
                <lifetime type="Singleton" />
            </register>
            <!-- 
            
            Services
            
            -->
            <register name="ExceptionMailer" type="IMailService" mapTo="MailService">
                <lifetime type="Singleton" />
                <property name="Enabled">
                    <value value="false"/>
                </property>
                <property name="EnableSsl">
                    <value value="false"/>
                </property>
                <property name="Recipients">
                    <array>
                        <!-- Who is recieving error reports -->
                        <value value="someone@yourdomain.com"/>
                    </array>
                </property>
                <property name="CarbonCopies">
                    <array />
                </property>
                <property name="BlindCarbonCopies">
                    <array />
                </property>
            </register>
        </container>
    </unity>
</configuration>