<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" requirePermission="false" />
    </configSections>
    <unity>
        <namespace name="ReusableLibrary.Abstractions.Caching" />
        <namespace name="ReusableLibrary.Abstractions.Net" />
        <namespace name="ReusableLibrary.Abstractions.Cryptography" />
        <namespace name="ReusableLibrary.Abstractions.Models" />
        <namespace name="ReusableLibrary.Memcached.Protocol" />
        <namespace name="ReusableLibrary.Memcached" />
        <namespace name="Public.WebMvc.Helpers" />
        <assembly name="ReusableLibrary.Abstractions" />
        <assembly name="ReusableLibrary.Memcached" />
        <assembly name="Public.WebMvc" />
        <!-- Lifetime Managers -->
        <alias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
        <alias alias="PerWebRequest" type="ReusableLibrary.Unity.UnityPerWebRequestLifetimeManager, ReusableLibrary.Unity" />
        <container>
            <!--
        
            Configuration Settings
            
            -->
            <register name="A" type="ConnectionOptions">
                <constructor>
                    <param name="options">
                        <value value="Name = A; Server = 127.0.0.1; Port = 11211; Dns Timeout = 250; Connect Timeout = 250; Send Timeout = 250; Send Buffer Size = 8192; Receive Timeout = 250; Receive Buffer Size = 8192; Max Pool Size = 16; Pool Access Timeout = 100; Pool Wait Timeout = 250; Idle Timeout = 30000; Lease Timeout = 900000" />
                        <!--<value value="Name = A; Server = 127.0.0.1; Port = 11211" />-->
                    </param>
                </constructor>
            </register>
            <register name="B" type="ConnectionOptions">
                <constructor>
                    <param name="options">
                        <value value="Name = B; Server = 127.0.0.1; Port = 11311; Dns Timeout = 250; Connect Timeout = 250; Send Timeout = 250; Send Buffer Size = 8192; Receive Timeout = 250; Receive Buffer Size = 8192; Max Pool Size = 16; Pool Access Timeout = 100; Pool Wait Timeout = 250; Idle Timeout = 30000; Lease Timeout = 900000" />
                        <!--<value value="Name = B; Server = 127.0.0.1; Port = 11311" />-->
                    </param>
                </constructor>
            </register>
            <register type="DistributedOptions">
                <constructor>
                    <param name="options">
                        <value value="Client Access Timeout = 100; Idle Pool Size = 16; Idle Lease Time = 10000; Idle Access Timeout = 100" />
                        <!--<value value="" />-->
                    </param>
                </constructor>
            </register>
            <register type="ProtocolOptions">
                <constructor>
                    <param name="options">
                        <value value="Buffer Size = 8192; No Reply = false; Pool Access Timeout = 100; Max Pool Size = 16" />
                        <!--<value value="" />-->
                    </param>
                </constructor>
            </register>
            <register type="RetryOptions">
                <constructor>
                    <param name="options">
                        <value value="Max Retry Count = 1;Retry Delay = 20;Retry Fails = true;Retry Timeout = 500" />
                        <!--<value value="" />-->
                    </param>
                </constructor>
            </register>
            <register type="IHashAlgorithmProvider" mapTo="HashAlgorithmProvider`1[FNV32ModifiedHashAlgorithm]">
                <lifetime type="Singleton" />
            </register>
            <register type="IClientFactory" mapTo="DefaultClientFactory">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="connectionOptions">
                        <array>
                            <dependency name="A" />
                            <dependency name="B" />
                        </array>
                    </param>
                    <param name="distributedOptions">
                        <dependency />
                    </param>
                    <param name="hashAlgorithmProvider">
                        <dependency />
                    </param>
                </constructor>
            </register>
            <register type="IProtocolFactory" mapTo="MemcachedFactory">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="clientFactory">
                        <dependency />
                    </param>
                    <param name="options">
                        <dependency />
                    </param>
                </constructor>
            </register>
            <!--
            
            Instrumentation
            
            -->
            <register name="Memcached" type="ICachingInstrumentationProvider" mapTo="CachingInstrumentationProvider">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="category">
                        <value value="Reusable Library Demo Memcached" />
                    </param>
                    <param name="instanceNameSuffix">
                        <value value="Demo" />
                    </param>
                    <param name="enabled">
                        <value value="true" />
                    </param>
                </constructor>
            </register>
            <!-- 
        
            Database 
            
            -->
            <register name="Memcached" type="ICache" mapTo="CacheClient">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="factory">
                        <dependency />
                    </param>
                </constructor>
            </register>
            <register name="Instrumentation" type="ICache" mapTo="CacheInstrumentation">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="inner">
                        <dependency name="Memcached" />
                    </param>
                    <param name="instrumentationProvider">
                        <dependency name="Memcached" />
                    </param>
                </constructor>
            </register>
            <register name="Retry" type="ICache" mapTo="CacheRetryClient">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="inner">
                        <dependency name="Instrumentation" />
                    </param>
                </constructor>
                <property name="Retry">
                    <dependency />
                </property>
            </register>            
            <register name="Tickets" type="ICache" mapTo="CacheProxy">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="inner">
                        <dependency name="Retry" />
                    </param>
                </constructor>
            </register>
            <register name="Captcha" type="ICache" mapTo="CacheProxy">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="inner">
                        <dependency name="Instrumentation" />
                    </param>
                </constructor>
            </register>
        </container>
    </unity>
</configuration>