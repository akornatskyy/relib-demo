<?xml version="1.0"?>
<!-- 
  Note: As an alternative to hand editing this file you can use the 
  web admin tool to configure settings for your application. Use
  the Website->Asp.Net Configuration option in Visual Studio.
  A full list of settings and comments can be found in 
  machine.config.comments usually located in 
  \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationSettings, Microsoft.Practices.EnterpriseLibrary.Validation, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false"/>
  </configSections>
  <appSettings>
    <add key="UnityBootstrapLoader" value="exception;cache-entlib;repository-mock;repository-cache;unity"/>
    <add key="UnityBootstrapLoader2" value="exception;cache-entlib;repository-sql;repository-cache;unity"/>
    <add key="UnityBootstrapLoader3" value="exception;cache-memcached;repository-mock;repository-cache;unity"/>
    <add key="CaptchaOptions" value="Width = 204; Encoder Quality = 65;Instrumentation Category = Reusable Library Demo Captcha"/>
    <add key="CaptchaOptions2" value="Path = /captcha2.jpg; Width = 204; Back Color = White; Text Color = Red"/>
  </appSettings>
  <validation configSource="Validation.config"/>
  <connectionStrings>
    <add name="ApplicationServices" connectionString="data source=.\SQLEXPRESS;Initial Catalog=Tickets;Integrated Security=SSPI;Application Name=Tickets" providerName="System.Data.SqlClient"/>
    <add name="ApplicationServices2" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|Tickets.mdf;Application Name=Tickets" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <system.diagnostics>
    <sources>
      <source name="TcpClientConnection" switchName="WarningSwitch">
        <listeners>
          <add name="TraceListener"/>
        </listeners>
      </source>
    </sources>
    <switches>
      <!-- You can set the level at which tracing is to occur -->
      <add name="VerboseSwitch" value="Verbose"/>
      <add name="InformationSwitch" value="Information"/>
      <add name="WarningSwitch" value="Warning"/>
      <add name="OffSwitch" value="Off"/>
      <!-- You can turn tracing off -->
      <!--add name="GlobalSwitch" value="Off" -->
    </switches>
    <trace autoflush="true">
    </trace>
    <sharedListeners>
      <add name="TraceListener" type="System.Web.WebPageTraceListener, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
    </sharedListeners>
  </system.diagnostics>
  <cachingConfiguration defaultCacheManager="DefaultCacheManager">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="30" maximumElementsInCacheBeforeScavenging="500" numberToRemoveWhenScavenging="100" backingStoreName="Null Storage" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="DefaultCacheManager"/>
      <add expirationPollFrequencyInSeconds="30" maximumElementsInCacheBeforeScavenging="500" numberToRemoveWhenScavenging="100" backingStoreName="Null Storage" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="TicketsCacheManager"/>
    </cacheManagers>
    <backingStores>
      <add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Null Storage"/>
    </backingStores>
  </cachingConfiguration>
  <system.net>
    <mailSettings>
      <!--<smtp from="">
        <network host="" port="" userName="" password="" />
      </smtp>-->
    </mailSettings>
    <connectionManagement>
      <add address="*" maxconnection="12"/>
    </connectionManagement>
    <settings>
      <servicePointManager expect100Continue="false"/>
    </settings>
  </system.net>
  <system.web>
    <!--
      The <customErrors> section enables configuration 
      of what to do if/when an unhandled error occurs 
      during the execution of a request. Specifically, 
      it enables developers to configure html error pages 
      to be displayed in place of a error stack trace.
    -->
    <customErrors mode="Off" redirectMode="ResponseRedirect" defaultRedirect="en/error/http500">
      <error statusCode="400" redirect="en/error/http400"/>
      <error statusCode="403" redirect="en/error/http403"/>
      <error statusCode="404" redirect="en/error/http404"/>
    </customErrors>
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true"/>
    <caching>
      <outputCache enableOutputCache="true"/>
      <outputCacheSettings>
        <outputCacheProfiles>
          <clear/>
          <add enabled="true" name="StaticContent" varyByParam="none" duration="1800" location="Server" noStore="true" varyByHeader="Accept-Language;Accept"/>
          <add enabled="true" name="StaticPerUserContent" varyByParam="none" duration="1800" location="Server" noStore="true" varyByHeader="Accept-Language;Accept"/>
          <add enabled="true" name="PrivateContent" varyByParam="none" duration="1800" location="Client" noStore="true" varyByHeader="Accept-Language;Accept"/>
          <add enabled="true" name="None" varyByParam="none" location="None" noStore="true"/>
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
    <!--
      Set compilation debug="true" to insert debugging 
      symbols into the compiled page. Because this 
      affects performance, set this value to true only 
      during development.
    -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="ReusableLibrary.Abstractions"/>
        <add assembly="ReusableLibrary.Captcha"/>
        <add assembly="ReusableLibrary.Supplemental"/>
        <add assembly="ReusableLibrary.Web.Mvc"/>
        <add assembly="Tickets.Interface"/>
        <add assembly="Tickets.Module"/>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <!--
      The <authentication> section enables configuration 
      of the security authentication mode used by 
      ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <forms name="__relibdemo" path="/" protection="All" loginUrl="~/account/logon" timeout="2880" slidingExpiration="true" cookieless="UseCookies"/>
    </authentication>
    <membership defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <clear/>
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="8" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="/tickets"/>
      </providers>
    </membership>
    <profile enabled="true">
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="/tickets"/>
      </providers>
    </profile>
    <roleManager enabled="true" defaultProvider="AspNetSqlRoleProvider" cacheRolesInCookie="true" cookieProtection="All">
      <providers>
        <clear/>
        <add connectionStringName="ApplicationServices" applicationName="/tickets" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
      </providers>
    </roleManager>
    <pages enableViewState="false" enableSessionState="false" autoEventWireup="false" enableEventValidation="false" validateRequest="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <controls/>
      <namespaces>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="System.Linq"/>
        <add namespace="System.Collections.Generic"/>
        <add namespace="ReusableLibrary.Abstractions.Models"/>
        <add namespace="ReusableLibrary.Captcha"/>
        <add namespace="ReusableLibrary.Supplemental.Collections"/>
        <add namespace="ReusableLibrary.Supplemental.System"/>
        <add namespace="ReusableLibrary.Web.Mvc.Helpers"/>
        <add namespace="ReusableLibrary.Web.Mvc"/>
        <add namespace="Tickets.Interface.Models"/>
        <add namespace="Public.WebMvc.Constants"/>
        <add namespace="Public.WebMvc.Helpers"/>
        <add namespace="Public.WebMvc.Models"/>
      </namespaces>
    </pages>
    <httpHandlers>
      <!--<add verb="GET" path="/captcha.jpg" validate="false" type="ReusableLibrary.Captcha.SimpleCaptchaHttpHandler, ReusableLibrary.Captcha" />-->
      <add verb="GET" path="/captcha.jpg" validate="false" type="ReusableLibrary.Captcha.CaptchaHttpHandler, ReusableLibrary.Captcha"/>
      <add verb="GET" path="/captcha2.jpg" validate="false" type="ReusableLibrary.Captcha.CaptchaHttpHandler, ReusableLibrary.Captcha"/>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </httpHandlers>
    <httpModules>
      <clear/>
      <add name="OutputCache" type="System.Web.Caching.OutputCacheModule"/>
      <add name="Denial" type="ReusableLibrary.Web.DenialModule, ReusableLibrary.Web"/>
      <!--add name="IpPolicy" type="ReusableLibrary.Web.IpPolicyModule, ReusableLibrary.Web"/-->
      <add name="Throttle" type="ReusableLibrary.Web.ThrottleModule, ReusableLibrary.Web"/>
      <add name="AjaxRedirect" type="ReusableLibrary.Web.AjaxRedirectModule, ReusableLibrary.Web"/>
      <add name="ExceptionPolicy" type="ReusableLibrary.Web.ExceptionPolicyModule, ReusableLibrary.Web"/>
      <add name="Compress" type="ReusableLibrary.Web.CompressModule, ReusableLibrary.Web"/>
      <add name="Shrink" type="ReusableLibrary.Web.ShrinkModule, ReusableLibrary.Web"/>
      <add name="Stopwatch" type="ReusableLibrary.Web.StopwatchModule, ReusableLibrary.Web"/>
      <add name="FormsAuthentication" type="System.Web.Security.FormsAuthenticationModule"/>
      <add name="RoleManager" type="System.Web.Security.RoleManagerModule"/>
      <add name="UnityPerWebRequestLifetime" type="ReusableLibrary.Unity.UnityPerWebRequestLifetimeModule, ReusableLibrary.Unity"/>
      <add name="UrlRouting" type="System.Web.Routing.UrlRoutingModule, System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpModules>
    <healthMonitoring>
      <providers>
        <clear/>
      </providers>
      <rules>
        <clear/>
      </rules>
    </healthMonitoring>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" culture="en-US" uiCulture="en-US"/>
    <sessionState mode="Off"/>
    <hostingEnvironment idleTimeout="900" shutdownTimeout="15"/>
    <!--
      Set minFreeThreads to 88 * # of CPUs. This setting is used by the worker 
      process to queue all the incoming requests if the number of available 
      threads in the thread pool falls below the value for this setting. This 
      setting effectively limits the number of requests that can run concurrently 
      to maxWorkerThreads minus minFreeThreads. Set minFreeThreads to 88 * # of CPUs. 
      This limits the number of concurrent requests to 12 
      (assuming maxWorkerThreads is 100).
        
      Set minLocalRequestFreeThreads to 76 * # of CPUs. This setting is used by 
      the worker process to queue requests from localhost (where a Web application 
      sends requests to a local Web service) if the number of available threads 
      in the thread pool falls below this number. This setting is similar to 
      minFreeThreads but it only applies to localhost requests from the local 
      computer. Set minLocalRequestFreeThreads to 76 * # of CPUs.
        
      executionTimeout 
      Specifies the maximum number of seconds that a request is allowed to execute 
      before being automatically shut down by ASP.NET. The default is 110 seconds. 
        
      maxRequestLength 
      Specifies the limit for the input stream buffering threshold, in KB. This 
      limit can be used to prevent denial of service attacks that are caused, for 
      example, by users posting large files to the server. The default is 4096 KB.

      shutdownTimeout 
      Specifies the number of minutes that are allowed for the worker process to 
      shut down. When the time-out expires, ASP.NET shuts down the worker process.
      The default is 90 seconds.
    -->
    <!-- TODO: requestValidationMode for .net 4.0 -->
    <httpRuntime enableVersionHeader="false" executionTimeout="30" maxRequestLength="8"
        minFreeThreads="88" minLocalRequestFreeThreads="76" shutdownTimeout="1800"
        requestValidationMode="2.0"/>
    <xhtmlConformance mode="Strict"/>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <staticContent>
      <!-- Tell client to cache static files for a day -->
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="1.00:00:00" />
    </staticContent>
    <modules runAllManagedModulesForAllRequests="false">
      <remove name="AnonymousIdentification" />
      <remove name="UrlAuthorization" />
      <remove name="FileAuthorization" />
      <remove name="UrlMappingsModule" />
      <remove name="WindowsAuthentication" />
      <remove name="Session" />
      <remove name="Profile" />
      <remove name="OutputCache" />
      <remove name="FormsAuthentication" />
      <remove name="RoleManager" />

      <add name="NoServerHeader" type="ReusableLibrary.Web.NoServerHeaderModule, ReusableLibrary.Web" />
      <add name="OutputCache" type="System.Web.Caching.OutputCacheModule" preCondition="managedHandler" />
      <add name="Denial" type="ReusableLibrary.Web.DenialModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <!--add name="IpPolicy" type="ReusableLibrary.Web.IpPolicyModule, ReusableLibrary.Web" preCondition="managedHandler"/-->
      <add name="Throttle" type="ReusableLibrary.Web.ThrottleModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <add name="AjaxRedirect" type="ReusableLibrary.Web.AjaxRedirectModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <add name="ExceptionPolicy" type="ReusableLibrary.Web.ExceptionPolicyModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <!--<add name="CompressModule" type="ReusableLibrary.Web.CompressModule, ReusableLibrary.Web" preCondition="managedHandler"/>-->
      <add name="Shrink" type="ReusableLibrary.Web.ShrinkModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <add name="Stopwatch" type="ReusableLibrary.Web.StopwatchModule, ReusableLibrary.Web" preCondition="managedHandler"/>
      <add name="FormsAuthentication" type="System.Web.Security.FormsAuthenticationModule" preCondition="managedHandler"/>
      <add name="RoleManager" type="System.Web.Security.RoleManagerModule" preCondition="managedHandler" />
      <add name="UnityPerWebRequestLifetime" type="ReusableLibrary.Unity.UnityPerWebRequestLifetimeModule, ReusableLibrary.Unity" preCondition="managedHandler"/>
    </modules>
    <handlers>
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <add name="CaptchaHandler" preCondition="integratedMode" path="/captcha.jpg" verb="GET" type="ReusableLibrary.Captcha.CaptchaHttpHandler, ReusableLibrary.Captcha" />
      <add name="Captcha2Handler" preCondition="integratedMode" path="/captcha2.jpg" verb="GET" type="ReusableLibrary.Captcha.CaptchaHttpHandler, ReusableLibrary.Captcha" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
    <httpErrors existingResponse="PassThrough" />
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
</configuration>
