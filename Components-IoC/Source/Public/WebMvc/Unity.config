<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" requirePermission="false" />
    </configSections>
    <unity>
        <namespace name="Tickets.Interface.Services" />
        <namespace name="Tickets.Interface.WorkItem" />
        <namespace name="Tickets.Interface.Instrumentation" />
        <namespace name="Tickets.Module.Services" />
        <namespace name="Public.WebMvc.Helpers" />
        <namespace name="ReusableLibrary.Abstractions.Bootstrapper" />
        <namespace name="ReusableLibrary.Abstractions.Models" />
        <namespace name="ReusableLibrary.Abstractions.Services" />
        <namespace name="ReusableLibrary.Abstractions.Threading" />
        <namespace name="ReusableLibrary.Abstractions.WorkItem" />
        <namespace name="ReusableLibrary.EntLib" />
        <namespace name="ReusableLibrary.Web" />
        <namespace name="ReusableLibrary.Web.Integration" />
        <namespace name="ReusableLibrary.Web.Mvc.Integration" />
        <namespace name="ReusableLibrary.Web.Mvc.Routing" />
        <namespace name="ReusableLibrary.Web.Mvc" />
        <namespace name="System.Web.Mvc" />
        <assembly name="Tickets.Interface" />
        <assembly name="Tickets.Module" />
        <assembly name="Public.WebMvc" />
        <assembly name="ReusableLibrary.Abstractions" />
        <assembly name="ReusableLibrary.Supplemental" />
        <assembly name="ReusableLibrary.EntLib" />
        <assembly name="ReusableLibrary.Web" />
        <assembly name="ReusableLibrary.Web.Mvc" />
        <assembly name="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <assembly name="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <assembly name="mscorlib, 4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <!-- Lifetime Managers -->
        <alias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
        <alias alias="PerWebRequest" type="ReusableLibrary.Unity.UnityPerWebRequestLifetimeManager, ReusableLibrary.Unity" />

        <alias alias="AuditMembershipService" type="Tickets.Interface.Services.Audit.MembershipService, Tickets.Interface" />
        <container>
            <instance name="InstrumentationEnabled" value="true" type="bool" />
            <!--
        
            Configuration Settings
            
            -->
            <register name="DefaultPaging" type="IPagingSettings" mapTo="PagingSettings">
                <lifetime type="Singleton" />
                <property name="DefaultItemsPerPage">
                    <value value="5" />
                </property>
                <property name="PageSizes">
                    <array>
                        <value value="5" />
                        <value value="10" />
                        <value value="20" />
                    </array>
                </property>
                <property name="PageCount">
                    <value value="3" />
                </property>
            </register>
            <!--
        
            ASP.NET MVC Integration
            
            -->
            <register type="IControllerFactory" mapTo="LocalizationControllerFactory">
                <lifetime type="Singleton" />
            </register>
            <register type="IViewDataAccessor" mapTo="ViewDataAccessor">
                <lifetime type="PerWebRequest" />
            </register>
            <register type="IValidationState" mapTo="ModelStateValidationAdapter">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="viewDataAccessor" type="IViewDataAccessor" />
                </constructor>
            </register>
            <!-- 
        
            Bootstrapper Tasks 
            
            -->
            <register name="registerControllerFactory" type="IStartupTask" mapTo="RegisterControllerFactory">
                <constructor>
                    <param name="controllerFactory" type="IControllerFactory">
                        <dependency/>
                    </param>
                </constructor>
            </register>
            <register name="initializeMvcSettings" type="IStartupTask" mapTo="InitializeMvcSettings" />
            <register name="throttleModuleSettings" type="IStartupTask" mapTo="ThrottleModuleSettings">
                <property name="RateQuota">
                    <value value="120" />
                </property>
                <property name="ThrottlePeriod">
                    <value value="00:01:00" />
                </property>
                <property name="NoExceptionPathRegex">
                    <value value="limitexceeded" />
                </property>
            </register>
            <register name="ipPolicyModuleSettings" type="IStartupTask" mapTo="IpPolicyModuleSettings">
                <property name="SecureOnly">
                    <value value="false" />
                </property>
                <property name="NoExceptionPathRegex">
                    <value value="ippolicy" />
                </property>
                <!-- http://jodies.de/ipcalc -->
                <property name="Denied">
                    <!-- 192.168.20.49 ~ 192.168.20.62 -->
                    <value value="192.168.20.51/28" />
                </property>
                <property name="Allowed">
                    <value value="127.0.0.1/32 192.168.20.0/24" />
                </property>
            </register>
            <register name="registerModelBinder" type="IStartupTask" mapTo="RegisterTrimStringModelBinder" />
            <register name="registerShrinkLeaveAtLeast" type="IStartupTask" mapTo="RegisterShrinkLeaveAtLeast">
                <property name="LeaveAtLeast">
                    <value value="1" />
                </property>
            </register>
            <register name="registerIgnoreRoutes" type="IStartupTask" mapTo="RegisterIgnoreRoutes" />
            <!--Add more routes here-->
            <register name="registerPreRoutes" type="IStartupTask" mapTo="RegisterPreRoutes" />
            <register name="registerSubstitutions" type="IStartupTask" mapTo="RegisterSubstitutions" />
            <register name="registerLocalizationRoutes" type="IStartupTask" mapTo="RegisterLocalizationRoutes" />
            <register name="registerPostRoutes" type="IStartupTask" mapTo="RegisterPostRoutes" />
            <!--<register name="registerDefaultRoutes" type="IStartupTask" mapTo="RegisterDefaultRoutes" />-->
            <!-- 
        
            Models 
            
            -->
            <!--
        
            Instrumentation
            
            -->
            <register type="MembershipInstrumentationProvider">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="enabled">
                        <dependency name="InstrumentationEnabled" />
                    </param>
                </constructor>
            </register>
            <!--
        
            Services
            
            -->
            <register type="IFormsAuthentication" mapTo="FormsAuthenticationService">
                <lifetime type="Singleton" />
            </register>
            <register type="IValidationService" mapTo="ValidationService">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="validationState" type="IValidationState" />
                </constructor>
            </register>
            <register type="IMementoService" mapTo="MementoService">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="repository">
                        <dependency name="Caching" />
                    </param>
                </constructor>
                <property name="Enabled">
                    <value value="true" />
                </property>
            </register>
            <register name="Direct" type="IMembershipService" mapTo="MembershipService">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="membershipRepository">
                        <dependency name="Caching" />
                    </param>
                </constructor>
                <property name="ValidationService" />
                <property name="ValidationState" />
            </register>
            <register type="IMembershipService" mapTo="AuditMembershipService">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="instrumentationProvider" />
                    <param name="inner">
                        <dependency name="Direct" />
                    </param>
                </constructor>
            </register>
            <register type="ITicketService" mapTo="TicketService">
                <lifetime type="PerWebRequest" />
                <constructor>
                    <param name="ticketPagingSettings" type="IPagingSettings">
                        <dependency name="DefaultPaging" type="IPagingSettings" />
                    </param>
                    <param name="ticketRepository">
                        <dependency name="Caching" />
                    </param>
                </constructor>
                <property name="ValidationService" />
                <property name="ValidationState" />
            </register>
        </container>
    </unity>
</configuration>