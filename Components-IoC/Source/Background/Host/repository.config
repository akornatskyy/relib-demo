<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" requirePermission="false" />
    </configSections>
    <unity>
        <namespace name="Tickets.Interface.Repository"/>
        <namespace name="Tickets.Module.Repository.Mock"/>
        <namespace name="ReusableLibrary.Abstractions.Services"/>
        <namespace name="System.Collections"/>
        <assembly name="Tickets.Interface"/>
        <assembly name="Tickets.Module"/>
        <assembly name="ReusableLibrary.Abstractions"/>
        <assembly name="mscorlib, 2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <!-- Lifetime Managers -->
        <alias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
        <alias alias="PerThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity"/>
        <alias alias="WorkItem" type="ReusableLibrary.Unity.WorkItemLifetimeManager, ReusableLibrary.Unity"/>
        <alias alias="External" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
        <container>
            <!-- 
        
            Models 
            
            -->
            <!-- 
        
            Database 
            
            -->
            <register name="MockUserState" type="IDictionary" mapTo="Hashtable">
                <lifetime type="Singleton" />
                <constructor />
            </register>
            <!-- 
        
            UnitOfWork 
            
            -->
            <register name="Tickets" type="IUnitOfWork" mapTo="NullUnitOfWork">
            </register>
            <!-- 
        
            Agents 
            
            -->
            <!-- 
        
            Repositories 
            
            -->
            <register type="IMembershipRepository" mapTo="MembershipRepository">
                <lifetime type="Singleton" />
                <constructor>
                    <param name="state" type="IDictionary">
                        <dependency name="MockUserState"/>
                    </param>
                </constructor>
            </register>
            <register type="ITicketRepository" mapTo="TicketRepository">
                <lifetime type="WorkItem" />
            </register>
            <register type="IBackgroundRepository" mapTo="BackgroundRepository">
                <lifetime type="WorkItem" />
            </register>
        </container>
    </unity>
</configuration>